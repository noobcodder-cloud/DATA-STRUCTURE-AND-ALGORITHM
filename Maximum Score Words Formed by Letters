class Solution{

    public int maxScoreWords(String[] words, char[] letters, int[] score) {
  
        if (words == null || words.length == 0 || letters == null || letters.length == 0 || score == null || score.length == 0) return 0;
        
        int[] count = new int[score.length];
        
        for (char ch : letters) {
            count[ch - 'a']++;
        }
        
        int res = backtrack(words, count, score, 0);
        return res;
        
    }
    
    public static int backtrack(String[] words, int[] count, int[] score, int index) {
    
        int max = 0;
        
        for(int i = 0; i < words.length; i++){
            
            int res = 0;
            int flag = true;
            String cur_element = words[i];  
          
            for(char ch: cur_element.toCharArray()){
                
                count[ch - 'a']--;
                res += score[ch - 'a'];
                if(count[ch - 'a'] < 0) flag = false;
                
            }
            
            if (isValid) {
                res += backtrack(words, count, score, i+1);
                max = Math.max(res, max);
            }

            for (char ch : cur_element.toCharArray()) {
                count[ch - 'a']++;
                res = 0;
            }
        }
        
        return max;
            
       }
    }
}
